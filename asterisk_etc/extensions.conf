[globals]
; Set this to your Flask WEB server setting LISTEN_ADDRESS and LISTEN_PORT
CONFMAN_HOST=http://192.168.8.247:5000
;CONFMAN_HOST=http://10.1.1.142:5000
;CONFMAN_HOST=http://192.168.1.37:5000

[confman-dialout]
exten => _5XXX,1,NoOp(===== INVITE TO CONF ${EXTEN} =====)
same => n,Set(CALLERID(num)=5199)
same => n,Dial(SIP/${EXTEN},40)
same => n,Set(ret=${CURL(${CONFMAN_HOST}/asterisk/dial_status/${conf_number}/${participant_number}/${DIALSTATUS})})

exten => _30XX,1,NoOp(===== INVITE TO CONF ${EXTEN} =====)
same => n,Set(CALLERID(num)=5199)
same => n,Dial(IAX2/sasovo/${EXTEN},40)
same => n,Set(ret=${CURL(${CONFMAN_HOST}/asterisk/dial_status/${conf_number}/${participant_number}/${DIALSTATUS})})

exten => _XXXXXX,1,NoOp(===== INVITE TO CONF ${EXTEN} =====)
same => n,Set(CALLERID(num)=4912405199)
same => n,Dial(DAHDI/g1/${EXTEN},40,tT)
same => n,Set(ret=${CURL(${CONFMAN_HOST}/asterisk/dial_status/${conf_number}/${participant_number}/${DIALSTATUS})})

exten => _8XXXXXXXXXX,1,NoOp(===== INVITE TO CONF ${EXTEN} =====)
same => n,Set(CALLERID(num)=4912405199)
same => n,Dial(DAHDI/g1/${EXTEN},40,T)
same => n,Set(ret=${CURL(${CONFMAN_HOST}/asterisk/dial_status/${conf_number}/${participant_number}/${DIALSTATUS})})

[confman-bridge]
exten => _X.,1,Verbose(Bridging ${participant_name} ${participant_number})
same  =>     n,Set(CALLERID(all)=${participant_name} <${participant_number}>)
same  =>     n,NoOp(${CONFMAN_HOST}/asterisk/enter_conference/${conf_number}/${participant_number}?channel=${CHANNEL})
same  =>     n,Set(ret=${CURL(${CONFMAN_HOST}/asterisk/enter_conference/${conf_number}/${participant_number}?channel=${CHANNEL})})
same  =>     n,Answer
same  =>     n,ConfBridge(${EXTEN},,,user_menu)
exten => h,1,NoOp(===== hangup =====)
same =>    n,Set(ret=${CURL(${CONFMAN_HOST}/asterisk/leave_conference/${conf_number}/${participant_number})})

[confman-unmute-request]
exten => s,1,Set(ret=${CURL(${CONFMAN_HOST}/asterisk/unmute_request/${conf_number}/${participant_number})})

; This is called from conference menu to invite participants
[confman-invite-all]
exten => s,1,Set(ret=${CURL(${CONFMAN_HOST}/asterisk/invite_all/${conf_number}/${participant_number})})
same  =>   n,GotoIf($["${ret}" = "NOTALLOWED"]?100)
same  =>   n,GotoIf($["${ret}" = "OK"]?200)
same  =>   n,Playback(an-error-has-occurred)
same  =>   100,Playback(access-denied)
same  =>   200,Playback(pls-wait-connect-call)

[rooms]
include => confman-dialin
exten => 1,1,NoOp(${INDIAL_TIMEOUT}, ${ASTCONFMAN_URL})

[confman-dialin]

; Short numbers for conferences
exten => _X.,1,Set(conf_number=${EXTEN})
exten => _X.,n,Set(participant_number=${CALLERID(num)})
exten => _X.,n,Set(participant_name=${CALLERID(name)})
exten => _X.,n,Set(dialin=yes)
exten => _X.,n,Goto(confman-dialin,s,check)

; Ask for Conference number
exten => s,1,Verbose(ConfMan Dialin Enter)
same  =>   n,Set(participant_number=${CALLERID(num)})
same  =>   n,Set(participant_name=${CALLERID(name)})
same  =>   n(enter-conf_number),Read(conf_number,conf-getconfno)
same =>    n,GotoIf($["${conf_number}" = ""]?enter-conf_number)

; Check conference
same =>    n(check),Set(check=${CURL(${CONFMAN_HOST}/asterisk/checkconf/${conf_number}/${CALLERID(num)})})
same =>    n,Verbose(Conference ${ARG1} check: ${check})
same =>    n,GotoIf($["${check}" = "NOCONF"]?noconf)
same =>    n,GotoIf($["${check}" = "NOTPUBLIC"]?notpublic)
same =>    n,GotoIf($["${check}" = "NOTAUTH"]?notauth)
same =>    n,GotoIf($["${check}" = "OK"]?enter:error)

; Now get CONFBRIDGE bridge profile
same =>    n(enter),Set(bridge_profile=${CURL(${CONFMAN_HOST}/asterisk/confprofile/${conf_number})})
same =>    n,NoOp(BRIDGE CONF PROFILE: ${bridge_profile})
same =>    n,While($["${SET(optval=${SHIFT(bridge_profile)})}" != ""])
same =>    n,Set(opt=${CUT(optval,=,1)})
same =>    n,Set(val=${CUT(optval,=,2)})
same =>    n,Set(CONFBRIDGE(bridge,${opt})=${val})
same =>    n,EndWhile
; Now get CONFBRIDGE user profile
same =>    n,Set(user_profile=${CURL(${CONFMAN_HOST}/asterisk/userprofile/${conf_number}/${participant_number})})
same =>    n,NoOp(BRIDGE USER PROFILE: ${user_profile})
same =>    n,While($["${SET(optval=${SHIFT(user_profile)})}" != ""])
same =>    n,Set(opt=${CUT(optval,=,1)})
same =>    n,Set(val=${CUT(optval,=,2)})
same =>    n,Set(CONFBRIDGE(user,${opt})=${val})
same =>    n,EndWhile
; Enter Conference
same =>    n,Goto(confman-bridge,${conf_number},1)

;same  =>   n,Set(ret=${CURL(${CONFMAN_HOST}/asterisk/enter_conference/${conf_number}/${participant_number})})
;same =>    n,ConfBridge(${conf_number},,,)
;same =>    n,Hangup
;exten => h,1,Set(ret=${CURL(${CONFMAN_HOST}/asterisk/leave_conference/${conf_number}/${participant_number})})

; NOCONF
same => n(noconf),Playback(conf-invalid)
same => n,Wait(0.5)
same => n,GotoIf($["${dialin}" = "yes"]?hangup:enter-conf_number)

; NOTPUBLIC
same => n(notpublic),Verbose(NOT A PUBLIC CONFERENCE ${conf_number} OR ${CALLERID(num)} NOT IN PARTICIPANTS)
same => n,Playback(ss-noservice)
same => n,GotoIf($["${dialin}" = "yes"]?hangup:enter-conf_number)

; ERROR
same => n(error),Verbose(Server returned unknown values probably error)
same => n,Playback(an-error-has-occurred)
same => n,GotoIf($["${dialin}" = "yes"]?hangup:enter-conf_number)

; NOTAUTH
same => n(notauth),Verbose(Asterisk server not authorized to call URLs - check config.py)
same => n,Playback(access-denied)
same => n,GotoIf($["${dialin}" = "yes"]?hangup:enter-conf_number)


; Finally
same => n(hangup),Hangup

